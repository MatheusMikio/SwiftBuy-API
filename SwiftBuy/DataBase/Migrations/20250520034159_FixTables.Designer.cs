// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SwiftBuy.DataBase;

#nullable disable

namespace SwiftBuy.Migrations
{
    [DbContext(typeof(SwiftBuyDbContext))]
    [Migration("20250520034159_FixTables")]
    partial class FixTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PedidoModelProdutoModel", b =>
                {
                    b.Property<int>("PedidoModelsId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutosId")
                        .HasColumnType("int");

                    b.HasKey("PedidoModelsId", "ProdutosId");

                    b.HasIndex("ProdutosId");

                    b.ToTable("PedidoModelProdutoModel");
                });

            modelBuilder.Entity("SwiftBuy.Model.ImagemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagemThumb")
                        .HasColumnType("longtext");

                    b.Property<bool>("Principal")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<string>("UrlImagem")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("imagens");
                });

            modelBuilder.Entity("SwiftBuy.Model.PedidoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("HoraPedido")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("pedidos");
                });

            modelBuilder.Entity("SwiftBuy.Model.ProdutoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("PromocaoProdutoModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PromocaoProdutoModelId");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("SwiftBuy.Model.PromocaoProdutoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Porcentagem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("promocoes");
                });

            modelBuilder.Entity("SwiftBuy.Model.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("PedidoModelProdutoModel", b =>
                {
                    b.HasOne("SwiftBuy.Model.PedidoModel", null)
                        .WithMany()
                        .HasForeignKey("PedidoModelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwiftBuy.Model.ProdutoModel", null)
                        .WithMany()
                        .HasForeignKey("ProdutosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwiftBuy.Model.ImagemModel", b =>
                {
                    b.HasOne("SwiftBuy.Model.ProdutoModel", "Produto")
                        .WithMany("ImagemProduto")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SwiftBuy.Model.PedidoModel", b =>
                {
                    b.HasOne("SwiftBuy.Model.UsuarioModel", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SwiftBuy.Model.ProdutoModel", b =>
                {
                    b.HasOne("SwiftBuy.Model.PromocaoProdutoModel", null)
                        .WithMany("Produtos")
                        .HasForeignKey("PromocaoProdutoModelId");
                });

            modelBuilder.Entity("SwiftBuy.Model.ProdutoModel", b =>
                {
                    b.Navigation("ImagemProduto");
                });

            modelBuilder.Entity("SwiftBuy.Model.PromocaoProdutoModel", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SwiftBuy.Model.UsuarioModel", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
